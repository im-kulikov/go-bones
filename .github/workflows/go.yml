name: Go
on:
  push:
    branches:
      - master
      - release/**
  pull_request:

env:
  GO111MODULE: on

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Setup go
        uses: actions/setup-go@v4
        with: { go-version: '1.20.x' }

      - name: Check out code
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }

      - name: Cache go mod
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: golangci-lint
        with: { version: latest }
        uses: golangci/golangci-lint-action@v3

      - name: dump dependencies (for nancy)
        run: go list -json -m all > go.list

      - name: Nancy (deps vulnerabilities)
        uses: sonatype-nexus-community/nancy-github-action@main

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint
    strategy: { matrix: { go: [ '1.19.x', '1.20.x' ] } }
    steps:
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: Check out code
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }

      - name: Cache go mod
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.go == '1.20.x'
        with:
          token: ${{ secrets.CODECOV_TOKEN }} #required
          file: ./coverage.txt
          fail_ci_if_error: true #optional (default = false)

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        if: startsWith(github.ref, 'refs/tags/')
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GO_RELEASER_TOKEN }}
